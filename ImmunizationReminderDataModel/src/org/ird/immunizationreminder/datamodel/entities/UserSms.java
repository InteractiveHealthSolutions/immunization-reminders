/*
// Generated May 2, 2011 12:48:02 PM by Hibernate Tools 3.2.0.b9

import java.util.Date;
import java.lang.reflect.Field;

import org.ird.immunizationreminder.datamodel.entities.ReminderSms.REMINDER_STATUS;

*//**
 * UserSms generated by hbm2java
 *//*
public class UserSms implements java.io.Serializable {

	public enum SMS_STATUS{
		PENDING("P"),
		SENT("S"),
		FAILED("F"),
		MISSED("M");

		private String representation;
		SMS_STATUS(String representation) {
			this.representation=representation;
		}
		@Override
		public String toString() {
			return this.representation;
		}
		public String getRepresentation() {
			return this.representation;
		}
	}
	private long id;
	private String text;
	private String recipient;
	private Date dueDate;
	private String status=SMS_STATUS.PENDING.toString();
	private String description;
	private Date sentdate;
	private String errorMessage;
	private String failureCause;
	private String createdByUserId;
	private String createdByUserName;
	private Date createdDate;

	public UserSms() {
	}

	public UserSms(long id) {
		this.id = id;
	}

	public UserSms(long id, String text, String recipient, Date dueDate,
			String status, String description, Date sentdate,
			String errorMessage, String failureCause, String createdByUserId,
			String createdByUserName, Date createdDate) {
		this.id = id;
		this.text = text;
		this.recipient = recipient;
		this.dueDate = dueDate;
		this.status = status;
		this.description = description;
		this.sentdate = sentdate;
		this.errorMessage = errorMessage;
		this.failureCause = failureCause;
		this.createdByUserId = createdByUserId;
		this.createdByUserName = createdByUserName;
		this.createdDate = createdDate;
	}

	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getText() {
		return this.text;
	}

	public void setText(String text) {
		this.text = text;
	}

	public String getRecipient() {
		return this.recipient;
	}

	public void setRecipient(String recipient) {
		this.recipient = recipient;
	}

	public Date getDueDate() {
		return this.dueDate;
	}

	public void setDueDate(Date dueDate) {
		this.dueDate = dueDate;
	}

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		boolean found=false;
		for (SMS_STATUS r : SMS_STATUS.values()) {
			if(r.getRepresentation().compareTo(status)==0){
				found=true;
				break;
			}
		}
		if(!found){//will throw error if wrong gender character is given
			setSmsStatus(SMS_STATUS.valueOf("Error in user sms status character:"+status));
		}
		this.status = status;
	}
	public void setSmsStatus(SMS_STATUS status) {
		this.status = status.toString();
	}
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Date getSentdate() {
		return this.sentdate;
	}

	public void setSentdate(Date sentdate) {
		this.sentdate = sentdate;
	}

	public String getErrorMessage() {
		return this.errorMessage;
	}

	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}

	public String getFailureCause() {
		return this.failureCause;
	}

	public void setFailureCause(String failureCause) {
		this.failureCause = failureCause;
	}

	public String getCreatedByUserId() {
		return this.createdByUserId;
	}

	public void setCreatedByUserId(String createdByUserId) {
		this.createdByUserId = createdByUserId;
	}

	public String getCreatedByUserName() {
		return this.createdByUserName;
	}

	public void setCreatedByUserName(String createdByUserName) {
		this.createdByUserName = createdByUserName;
	}

	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}
	public void setCreator(User creator){
		createdByUserId=creator.getName();
		createdByUserName=creator.getFullName();
		createdDate=new Date();
	}
	@Override
	public String toString() {
		StringBuilder s = new StringBuilder(UserSms.class.getSimpleName());
		s.append("[");
		Field[] f = UserSms.class.getDeclaredFields();
		for (Field field : f) {
			try {
				s.append(field.getName()+"="+field.get(this));
				s.append(";");
			} catch (IllegalArgumentException e) {
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				e.printStackTrace();
			}
			catch (Exception e) {
				e.printStackTrace();
			}
		}
		int i = s.lastIndexOf(";");
		if(i != -1) s.deleteCharAt(i);
		
		s.append("]");

		return s.toString();	
	}
}
*/